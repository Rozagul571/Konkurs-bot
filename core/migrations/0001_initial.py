# Generated by Django 4.2.24 on 2025-09-26 06:25

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('finished', 'Finished')], default='active', max_length=20)),
                ('total_points', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('total_points', models.PositiveIntegerField(default=0)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='core.competition')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('participant', 'Participant'), ('premium', 'Premium')], default='participant', max_length=20)),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('referral_code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PointRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('referral', 'Referral'), ('channel_join', 'Join All Channels'), ('bonus', 'Bonus'), ('premium_referral', 'Premium Referral'), ('task_instagram', 'Instagram Task'), ('daily_bonus', 'Daily Bonus'), ('super_bonus', 'Super Bonus')], default='referral', max_length=50)),
                ('points', models.PositiveIntegerField(default=0)),
                ('multiplier', models.FloatField(default=1.0)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_rules', to='core.competition')),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('reason', models.CharField(choices=[('referral', 'Referral'), ('channel_join', 'Join All Channels'), ('bonus', 'Bonus'), ('premium_referral', 'Premium Referral'), ('task_instagram', 'Instagram Task'), ('daily_bonus', 'Daily Bonus'), ('super_bonus', 'Super Bonus')], max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points', to='core.participant')),
            ],
        ),
        migrations.AddField(
            model_name='participant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='core.user'),
        ),
        migrations.AddField(
            model_name='competition',
            name='admin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_competitions', to='core.user'),
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel_username', models.CharField(max_length=200, unique=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(choices=[('channel', 'Channel'), ('group', 'Group')], default='channel', max_length=20)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='core.competition')),
            ],
            options={
                'db_table': 'channels',
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to='core.competition')),
                ('referred', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invited_by', to='core.user')),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to='core.user')),
            ],
            options={
                'unique_together': {('referrer', 'referred', 'competition')},
            },
        ),
        migrations.CreateModel(
            name='Prize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.PositiveIntegerField()),
                ('prize_name', models.CharField(blank=True, max_length=200, null=True)),
                ('prize_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prizes', to='core.competition')),
            ],
            options={
                'unique_together': {('competition', 'place')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='participant',
            unique_together={('user', 'competition')},
        ),
    ]
